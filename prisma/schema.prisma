// Schéma de base de données pour la plateforme SaaS RH Côte d'Ivoire
// Optimisé pour les PME ivoiriennes (20-100 employés)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modèle Entreprise - Clients de la plateforme
model Entreprise {
  id        String   @id @default(cuid())
  nom       String
  rccm      String   @unique // Registre du Commerce et du Crédit Mobilier
  secteur   String
  adresse   String
  telephone String
  email     String   @unique
  
  // Abonnement et facturation
  planAbonnement    PlanAbonnement @default(GRATUIT)
  statutAbonnement  StatutAbonnement @default(ACTIF)
  dateFinAbonnement DateTime?
  
  // Relations
  utilisateurs User[]
  employes     Employe[]
  bulletinsPaie BulletinPaie[]
  declarationsCNPS DeclarationCNPS[]
  documents    Document[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("entreprises")
}

// Modèle Utilisateur - Accès à la plateforme
model User {
  id       String @id @default(cuid())
  email    String @unique
  nom      String
  prenom   String
  motDePasse String
  role     RoleUtilisateur @default(ADMIN_ENTREPRISE)
  
  // Relations
  entrepriseId String
  entreprise   Entreprise @relation(fields: [entrepriseId], references: [id], onDelete: Cascade)
  documents    Document[]
  uploadePar   Document[] @relation("DocumentUploadePar")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("users")
}

// Modèle Employé - Cœur de la gestion RH
model Employe {
  id             String   @id @default(cuid())
  matricule      String   @unique // Matricule d'employé unique (EMP-XXXX)
  nom            String
  prenom         String
  email          String?
  telephone      String?
  
  // Informations personnelles étendues
  adresse        String?
  dateNaissance  DateTime?
  lieuNaissance  String?
  nationalite    String   @default("Ivoirienne")
  genre          String? // MASCULIN, FEMININ
  situationMatrimoniale String? // CELIBATAIRE, MARIE, DIVORCE, VEUF
  nombreEnfants  Int      @default(0)
  numeroSecuriteSociale String?
  
  // Informations professionnelles
  poste          String
  departement    String?
  typeContrat    String   @default("CDI") // CDI, CDD, STAGE, CONSULTANT
  dateEmbauche   DateTime
  dateFinContrat DateTime?
  
  // Informations de paie - Alignement avec API
  salaireBrut    Decimal @db.Decimal(12, 2) // Renommé pour cohérence avec API
  devise         String  @default("XOF")
  primeTransport Decimal @default(0) @db.Decimal(10, 2)
  primesFixes    Decimal @default(0) @db.Decimal(10, 2)
  
  // Informations bancaires/mobile money
  modePaiement   String   @default("VIREMENT") // VIREMENT, CHEQUE, ESPECES, MOBILE_MONEY
  numeroCompteBancaire String?
  banque         String?
  numeroMobileMoney String?
  operateurMobileMoney String? // ORANGE_MONEY, WAVE, MTN_MOMO
  
  // Documents
  photoUrl       String?
  cvUrl          String?
  contratUrl     String?
  
  // CNPS
  numeroCNPS     String?
  
  // Statut employé
  statut         String   @default("ACTIF") // ACTIF, INACTIF, SUSPENDU
  
  // Relations
  entrepriseId   String
  entreprise     Entreprise @relation(fields: [entrepriseId], references: [id], onDelete: Cascade)
  bulletinsPaie  BulletinPaie[]
  historiqueEmploye HistoriqueEmploye[]
  documents      Document[]
  
  // Dates système
  dateCreation   DateTime @default(now())
  dateMiseAJour  DateTime @updatedAt
  dateFin        DateTime? // Pour soft delete
  
  @@unique([entrepriseId, email]) // Un email par entreprise
  @@map("employes")
}

// Historique des modifications employé
model HistoriqueEmploye {
  id           String @id @default(cuid())
  typeModification String // EMBAUCHE, MODIFICATION_DONNEES, SUPPRESSION, etc.
  description      String
  ancienneValeur   Json?
  nouvelleValeur   Json?
  
  // Relations
  employeId    String
  employe      Employe @relation(fields: [employeId], references: [id], onDelete: Cascade)
  utilisateurId String? // Qui a fait la modification
  
  dateModification DateTime @default(now())
  
  @@map("historique_employes")
}

// Modèle Bulletin de Paie
model BulletinPaie {
  id              String   @id @default(cuid())
  numeroFiche     String   @unique // Numéro de fiche de paie
  mois            Int      // 1-12
  annee           Int
  periode         String   // "Janvier 2024"
  
  // Éléments de calcul
  salaireBase     Decimal  @db.Decimal(12, 2) // Salaire de base
  heuresSupp      Decimal  @default(0) @db.Decimal(8, 2)
  tauxHeuresSupp  Decimal  @default(0) @db.Decimal(8, 2)
  primeTransport  Decimal  @default(0) @db.Decimal(10, 2)
  primesVariables Decimal  @default(0) @db.Decimal(10, 2)
  avances         Decimal  @default(0) @db.Decimal(10, 2)
  
  // Calculs automatiques
  salaireBrut     Decimal  @db.Decimal(12, 2) // Salaire brut total
  cotisationCNPSEmploye   Decimal @db.Decimal(10, 2) // 3.2%
  cotisationCNPSEmployeur Decimal @db.Decimal(10, 2) // 16.4%
  impotSurSalaire Decimal  @default(0) @db.Decimal(10, 2)
  salaireNet      Decimal  @db.Decimal(12, 2)
  
  // Statut et traitement
  statut          StatutBulletin @default(BROUILLON)
  dateGeneration  DateTime @default(now())
  dateEnvoi       DateTime?
  pdfUrl          String?
  
  // Relations
  employeId       String
  employe         Employe @relation(fields: [employeId], references: [id], onDelete: Cascade)
  entrepriseId    String
  entreprise      Entreprise @relation(fields: [entrepriseId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([employeId, mois, annee])
  @@map("bulletins_paie")
}

// Déclarations CNPS mensuelles
model DeclarationCNPS {
  id               String   @id @default(cuid())
  mois             Int      // 1-12
  annee            Int
  periode          String   // "Janvier 2024"
  
  // Totaux de la déclaration
  nombreEmployes   Int
  masseSalariale   Decimal  @db.Decimal(15, 2)
  totalCotisationsEmploye   Decimal @db.Decimal(12, 2)
  totalCotisationsEmployeur Decimal @db.Decimal(12, 2)
  totalCotisations Decimal  @db.Decimal(12, 2)
  
  // Statut et fichiers
  statut           StatutDeclaration @default(BROUILLON)
  dateGeneration   DateTime @default(now())
  dateDepot        DateTime?
  excelUrl         String?
  
  // Relations
  entrepriseId     String
  entreprise       Entreprise @relation(fields: [entrepriseId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([entrepriseId, mois, annee])
  @@map("declarations_cnps")
}

// Modèle Document - Gestion des fichiers
model Document {
  id           String @id @default(cuid())
  nom          String
  typeDocument String // "contrat", "cv", "fiche_poste", "bulletin_paie", etc.
  nomFichier   String
  cheminFichier String
  tailleFichier Int
  typeMime     String
  
  // Relations
  employeId    String?
  employe      Employe? @relation(fields: [employeId], references: [id], onDelete: SetNull)
  entrepriseId String
  entreprise   Entreprise @relation(fields: [entrepriseId], references: [id], onDelete: Cascade)
  uploadeParId String
  uploadePar   User @relation("DocumentUploadePar", fields: [uploadeParId], references: [id])
  
  dateUpload   DateTime @default(now())
  dateMiseAJour DateTime @updatedAt
  
  @@map("documents")
}

// Enums pour les différents statuts et types

enum PlanAbonnement {
  GRATUIT
  STARTER    // 15k CFA/mois - jusqu'à 25 employés
  PRO        // 45k CFA/mois - jusqu'à 100 employés
  ENTERPRISE // 100k CFA/mois - 100+ employés
}

enum StatutAbonnement {
  ACTIF
  SUSPENDU
  EXPIRE
  ANNULE
}

enum RoleUtilisateur {
  SUPER_ADMIN
  ADMIN_ENTREPRISE
  GESTIONNAIRE_RH
  CONSULTANT
}

enum StatutEmploye {
  CDI
  CDD
  STAGE
  CONSULTANT
  SUSPENDU
  LICENCIE
}

enum ModePaiement {
  VIREMENT_BANCAIRE
  ORANGE_MONEY
  MTN_MOMO
  WAVE
  ESPECES
}

enum TypeModificationEmploye {
  EMBAUCHE
  PROMOTION
  AUGMENTATION
  SANCTION
  SUSPENSION
  LICENCIEMENT
  MODIFICATION_CONTRAT
}

enum StatutBulletin {
  BROUILLON
  VALIDE
  ENVOYE
  ARCHIVE
}

enum StatutDeclaration {
  BROUILLON
  VALIDEE
  DEPOSEE
  ACCEPTEE
  REJETEE
}